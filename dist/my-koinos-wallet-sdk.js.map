{"mappings":"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","sources":["src/index.ts","src/provider.ts","src/signer.ts","src/util/Messenger.ts","src/util/onWindowLoad.ts"],"sourcesContent":["import { IncomingMessage, OutgoingMessage, Account, Permissions } from './interfaces'\nimport generateProvider from './provider'\nimport generateSigner from './signer'\nimport { Messenger } from './util/Messenger'\nimport { onWindowLoad } from './util/onWindowLoad'\n\nconst MY_KOINOS_WALLET_IFRAME_CLASS = 'my-koinos-wallet-iframe'\nconst MY_KOINOS_WALLET_CONNECTOR_CHILD_MESSENGER_ID = 'my-koinos-wallet-connector-child'\nconst MY_KOINOS_WALLET_CONNECTOR_PARENT_MESSENGER_ID = 'my-koinos-wallet-connector-parent'\n\nonWindowLoad()\n  .then(() => {\n    if (document.getElementsByClassName(MY_KOINOS_WALLET_IFRAME_CLASS).length > 1) {\n      console.warn('My Koinos Wallet script was already loaded. This might cause unexpected behavior. If loading with a <script> tag, please make sure that you only load it once.')\n    }\n  })\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  .catch(() => { }) // Prevents unhandledPromiseRejectionWarning, which happens when using React SSR;\n\nexport default class MyKoinosWallet {\n  private messenger: Messenger<IncomingMessage, OutgoingMessage>\n  private iframe: HTMLIFrameElement\n\n  constructor(walletUrl: string) {\n    MyKoinosWallet.checkIfAlreadyInitialized()\n\n    this.iframe = document.createElement('iframe')\n    this.iframe.className = MY_KOINOS_WALLET_IFRAME_CLASS\n    this.iframe.hidden = true\n    this.iframe.src = walletUrl\n    document.body.appendChild(this.iframe)\n  }\n\n  close() {\n    if (this.messenger) {\n      this.messenger.removeListener()\n    }\n\n    this.iframe.remove()\n  }\n\n  async connect() {\n    if (!this.iframe.contentWindow) {\n      throw new Error('My Koinos Wallet is not loaded yet')\n    }\n\n    this.messenger = new Messenger<IncomingMessage, OutgoingMessage>(this.iframe.contentWindow as Window, MY_KOINOS_WALLET_CONNECTOR_PARENT_MESSENGER_ID)\n\n    try {\n      await this.messenger.ping(MY_KOINOS_WALLET_CONNECTOR_CHILD_MESSENGER_ID)\n      \n      return true\n    } catch (error) {\n      console.log(error)\n      return false\n    }\n  }\n\n  private static checkIfAlreadyInitialized() {\n    if (document.getElementsByClassName(MY_KOINOS_WALLET_IFRAME_CLASS).length) {\n      console.warn(\n        'An instance of My Koinos Wallet was already initialized. This is probably a mistake. Make sure that you use the same My KoinosWallet instance throughout your app.',\n      )\n    }\n  }\n\n  async getAccounts(timeout = 60000) {\n    if (!this.iframe.contentWindow) {\n      throw new Error('My Koinos Wallet is not loaded yet')\n    }\n  \n    const { result } = await this.messenger.sendRequest(MY_KOINOS_WALLET_CONNECTOR_CHILD_MESSENGER_ID, {\n      scope: 'accounts',\n      command: 'getAccounts'\n    }, timeout)\n\n    return result as Account[]\n  }\n\n  async requestPermissions(permissions: Permissions, timeout = 60000) {\n    if (!this.iframe.contentWindow) {\n      throw new Error('My Koinos Wallet is not loaded yet')\n    }\n  \n    const { result } = await this.messenger.sendRequest(MY_KOINOS_WALLET_CONNECTOR_CHILD_MESSENGER_ID, {\n      scope: 'permissions',\n      command: 'requestPermissions',\n      arguments: JSON.stringify({\n        permissions\n      })\n    }, timeout)\n\n    return result as Permissions\n  }\n\n  getSigner(signerAddress: string, timeout: number = 60000) {\n    if (!this.iframe.contentWindow) {\n      throw new Error('My Koinos Wallet is not loaded yet')\n    }\n\n    return generateSigner(signerAddress, this.messenger, MY_KOINOS_WALLET_CONNECTOR_CHILD_MESSENGER_ID, timeout)\n  }\n\n  getProvider(timeout: number = 60000) {\n    if (!this.iframe.contentWindow) {\n      throw new Error('My Koinos Wallet is not loaded yet')\n    }\n\n    return generateProvider(this.messenger, MY_KOINOS_WALLET_CONNECTOR_CHILD_MESSENGER_ID, timeout)\n  }\n}","import { Provider } from 'koilib'\nimport {\n  BlockJson,\n  CallContractOperationJson,\n  TransactionJson\n} from 'koilib/lib/interface'\nimport { IncomingMessage, OutgoingMessage, TransactionResult } from './interfaces'\nimport { Messenger } from './util/Messenger'\n\nexport default function generateProvider(\n  messenger: Messenger<IncomingMessage, OutgoingMessage>,\n  walletConnectorMessengerId: string,\n  timeout: number\n): Provider {\n\n  return {\n    async call<T = unknown>(method: string, params: unknown): Promise<T> {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'call',\n        arguments: JSON.stringify({\n          method,\n          params\n        })\n      }, timeout)\n\n\n      return result as T\n    },\n\n    async getNonce(account: string): Promise<number> {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'getNonce',\n        arguments: JSON.stringify({\n          account\n        })\n      }, timeout)\n\n\n      return result as number\n    },\n\n    async getNextNonce(account: string): Promise<string> {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'getNextNonce',\n        arguments: JSON.stringify({\n          account\n        })\n      }, timeout)\n\n\n      return result as string\n    },\n\n    async getAccountRc(account: string): Promise<string> {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'getAccountRc',\n        arguments: JSON.stringify({\n          account\n        })\n      }, timeout)\n\n\n      return result as string\n    },\n\n    async getTransactionsById(transactionIds: string[]): Promise<{\n      transactions: {\n        transaction: TransactionJson;\n        containing_blocks: string[];\n      }[];\n    }> {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'getTransactionsById',\n        arguments: JSON.stringify({\n          transactionIds\n        })\n      }, timeout)\n\n\n      return result as {\n        transactions: {\n          transaction: TransactionJson;\n          containing_blocks: string[];\n        }[];\n      }\n    },\n\n    async getBlocksById(blockIds: string[]): Promise<{\n      block_items: {\n        block_id: string;\n        block_height: string;\n        block: BlockJson;\n      }[];\n    }> {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'getBlocksById',\n        arguments: JSON.stringify({\n          blockIds\n        })\n      }, timeout)\n\n\n      return result as {\n        block_items: {\n          block_id: string;\n          block_height: string;\n          block: BlockJson;\n        }[];\n      }\n    },\n\n    async getHeadInfo(): Promise<{\n      head_block_time: string;\n      head_topology: {\n        id: string;\n        height: string;\n        previous: string;\n      };\n      head_state_merkle_root: string;\n      last_irreversible_block: string;\n    }> {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'getHeadInfo',\n        arguments: JSON.stringify({\n\n        })\n      }, timeout)\n\n      return result as {\n        head_block_time: string;\n        head_topology: {\n          id: string;\n          height: string;\n          previous: string;\n        };\n        head_state_merkle_root: string;\n        last_irreversible_block: string;\n      }\n    },\n\n    async getChainId(): Promise<string> {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'getChainId',\n        arguments: JSON.stringify({\n\n        })\n      }, timeout)\n\n      return result as string\n    },\n\n    async getBlocks(\n      height: number,\n      numBlocks = 1,\n      idRef?: string\n    ): Promise<\n      {\n        block_id: string;\n        block_height: string;\n        block: BlockJson;\n        block_receipt: {\n          [x: string]: unknown;\n        };\n      }[]\n    > {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'getBlocks',\n        arguments: JSON.stringify({\n          height,\n          numBlocks,\n          idRef\n        })\n      }, timeout)\n\n      return result as {\n        block_id: string;\n        block_height: string;\n        block: BlockJson;\n        block_receipt: {\n          [x: string]: unknown;\n        };\n      }[]\n    },\n\n    async getBlock(height: number): Promise<{\n      block_id: string;\n      block_height: string;\n      block: BlockJson;\n      block_receipt: {\n        [x: string]: unknown;\n      };\n    }> {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'getBlock',\n        arguments: JSON.stringify({\n          height\n        })\n      }, timeout)\n\n      return result as {\n        block_id: string;\n        block_height: string;\n        block: BlockJson;\n        block_receipt: {\n          [x: string]: unknown;\n        };\n      }\n    },\n\n    async wait(\n      transactionId: string,\n      type: 'byTransactionId' | 'byBlock' = 'byBlock',\n      waitTimeout = 30000\n    ): Promise<{ blockId: string; blockNumber?: number }> {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'wait',\n        arguments: JSON.stringify({\n          transactionId,\n          type,\n          timeout: waitTimeout\n        })\n      }, timeout)\n\n\n      return result as { blockId: string; blockNumber?: number }\n    },\n\n    async sendTransaction(\n      transaction: TransactionJson,\n      broadcast = true\n    ): Promise<TransactionResult> {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'sendTransaction',\n        arguments: JSON.stringify({\n          transaction,\n          broadcast\n        })\n      }, timeout);\n\n      (result as TransactionResult).transaction.wait = async (\n        type: 'byTransactionId' | 'byBlock' = 'byBlock',\n        waitTimeout = 60000\n      ) => {\n        const { result: waitResult } = await messenger.sendRequest(walletConnectorMessengerId, {\n          scope: 'provider',\n          command: 'wait',\n          arguments: JSON.stringify({\n            transactionId: transaction.id,\n            type,\n            timeout: waitTimeout\n          })\n        }, timeout)\n\n\n        return waitResult as { blockId: string; blockNumber?: number }\n      }\n\n      return result as TransactionResult\n    },\n\n    async readContract(operation: CallContractOperationJson): Promise<{\n      result: string;\n      logs: string;\n    }> {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'readContract',\n        arguments: JSON.stringify({\n          operation\n        })\n      }, timeout)\n\n      return result as {\n        result: string;\n        logs: string;\n      }\n    },\n\n    async submitBlock(block: BlockJson): Promise<Record<string, never>> {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'provider',\n        command: 'submitBlock',\n        arguments: JSON.stringify({\n          block\n        })\n      }, timeout)\n\n      return result as Record<string, never>\n    },\n  } as Provider\n}","import { Signer, utils } from 'koilib'\nimport {\n  BlockJson,\n  SendTransactionOptions,\n  TransactionJson,\n} from 'koilib/lib/interface'\nimport { IncomingMessage, OutgoingMessage, SignSendTransactionResult, TransactionResult } from './interfaces'\nimport generateProvider from './provider'\nimport { Messenger } from './util/Messenger'\n\nexport default function generateSigner(\n  signerAddress: string,\n  messenger: Messenger<IncomingMessage, OutgoingMessage>,\n  walletConnectorMessengerId: string,\n  timeout: number\n): Signer {\n  return {    \n    provider: generateProvider(messenger, walletConnectorMessengerId, timeout),\n\n    getAddress: () => signerAddress,\n\n    getPrivateKey: (): string => {\n      throw new Error('not implemented')\n    },\n\n    signHash: async (hash: Uint8Array): Promise<Uint8Array> => {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'signer',\n        command: 'signHash',\n        arguments: JSON.stringify({\n          signerAddress,\n          hash,\n        })\n      }, timeout)\n\n      return utils.decodeBase64url(result as string)\n    },\n\n    signMessage: async (message: string | Uint8Array): Promise<Uint8Array> => {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'signer',\n        command: 'signMessage',\n        arguments: JSON.stringify({\n          signerAddress,\n          message,\n        })\n      }, timeout)\n\n      return utils.decodeBase64url(result as string)\n    },\n\n    prepareTransaction: async (\n      transaction: TransactionJson\n    ): Promise<TransactionJson> => {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'signer',\n        command: 'prepareTransaction',\n        arguments: JSON.stringify({\n          signerAddress,\n          transaction,\n        })\n      }, timeout)\n\n      return result as TransactionJson\n    },\n\n    signTransaction: async (\n      transaction: TransactionJson,\n      abis?: SendTransactionOptions['abis']\n    ): Promise<TransactionJson> => {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'signer',\n        command: 'signTransaction',\n        arguments: JSON.stringify({\n          signerAddress,\n          transaction,\n          options: {\n            abis\n          }\n        })\n      }, timeout)\n\n      return (result as SignSendTransactionResult).transaction\n    },\n\n    sendTransaction: async (\n      transaction: TransactionJson,\n      options?: SendTransactionOptions\n    ): Promise<TransactionResult> => {\n      const { result } = await messenger.sendRequest(walletConnectorMessengerId, {\n        scope: 'signer',\n        command: 'signAndSendTransaction',\n        arguments: JSON.stringify({\n          signerAddress,\n          transaction,\n          options\n        })\n      }, timeout);\n\n      (result as TransactionResult).transaction.wait = async (\n        type: 'byTransactionId' | 'byBlock' = 'byBlock',\n        waitTimeout = 60000\n      ) => {\n        const { result: waitResult } = await messenger.sendRequest(walletConnectorMessengerId, {\n          scope: 'provider',\n          command: 'wait',\n          arguments: JSON.stringify({\n            transactionId: (result as TransactionResult).transaction.id,\n            type,\n            timeout: waitTimeout\n          })\n        }, timeout)\n\n\n        return waitResult as { blockId: string; blockNumber?: number }\n      }\n\n      return result as TransactionResult\n    },\n\n    prepareBlock: (): Promise<BlockJson> => {\n      throw new Error('not implemented')\n    },\n\n    signBlock: (): Promise<BlockJson> => {\n      throw new Error('not implemented')\n    },\n  } as unknown as Signer\n}\n","\nexport interface IMessage {\n  from: string\n  to?: string\n  type?: string\n  data?: string\n  error?: string\n}\n\nexport type SendDataFn<OutgoingDataType> = (data: OutgoingDataType) => void\nexport type SendErrorFn = (error: string) => void\n\nexport type OnRequestFnArgs<IncomingDataType, OutgoingDataType> = {\n  sender: string,\n  data: IncomingDataType,\n  sendData: SendDataFn<OutgoingDataType>,\n  sendError: SendErrorFn\n}\n\nexport type OnMessageFnArgs<IncomingDataType> = {\n  sender: string,\n  data: IncomingDataType\n}\n\nexport type OnMessageFnType<IncomingDataType> = (args: OnMessageFnArgs<IncomingDataType>) => Promise<void> | void\nexport type OnRequestFnType<IncomingDataType, OutgoingDataType> = (args: OnRequestFnArgs<IncomingDataType, OutgoingDataType>) => Promise<void> | void\n\nconst PING_REQUEST_TYPE = 'messenger::ping::request'\nconst PING_REQUEST_ACK_TYPE = 'messenger::ping::ack'\n\nexport class Messenger<IncomingDataType, OutgoingDataType> {\n  private id: string\n  private target: Window | ServiceWorker\n  private isTargetWindow: boolean\n  private targetOrigin: string\n  private onMessageFn?: OnMessageFnType<IncomingDataType>\n  private onRequestFn?: OnRequestFnType<IncomingDataType, OutgoingDataType>\n  private onMessageListenerAdded: boolean\n\n  constructor(target: Window | ServiceWorker, id: string, isTargetWindow = true, targetOrigin = '*') {\n    this.id = id\n    this.target = target\n    this.isTargetWindow = isTargetWindow\n    this.targetOrigin = targetOrigin\n    this.onMessageListenerAdded = false\n    this.addMessageListener()\n  }\n\n  private onMessageListener = async (event: MessageEvent<IMessage>) => {\n    if (this.targetOrigin !== '*' && !this.targetOrigin.startsWith(event.origin)) return\n\n    const { data, ports } = event\n\n    if (data.type !== PING_REQUEST_TYPE && data.to !== this.id) return\n\n    if (data && ports && ports[0]) {\n      if (data.type === PING_REQUEST_TYPE) {\n        ports[0].postMessage({ type: PING_REQUEST_ACK_TYPE })\n      } else if (this.onRequestFn) {\n        await this.onRequestFn({\n          sender: event.origin,\n          data: JSON.parse(data.data!),\n          sendData: (data: OutgoingDataType) => {\n            ports[0].postMessage({ data })\n          },\n          sendError: (error: string) => {\n            ports[0].postMessage({ error })\n          }\n        })\n      }\n\n      ports[0].close()\n    } else if (data) {\n      if (this.onMessageFn) {\n        this.onMessageFn({\n          sender: event.origin,\n          data: JSON.parse(data.data!)\n        })\n      }\n    }\n  }\n\n  private addMessageListener = () => {\n    if (!this.onMessageListenerAdded) {\n      this.onMessageListenerAdded = true\n      self.addEventListener('message', this.onMessageListener)\n    }\n  }\n\n  ping = async (targetId: string, numberOfAttempt: number = 20) => {\n    if (!this.onMessageListenerAdded) {\n      throw new Error('ping was cancelled')\n    }\n\n    try {\n      await this._sendRequest({ type: PING_REQUEST_TYPE, from: this.id, to: targetId }, 500)\n    } catch (error) {\n      if (--numberOfAttempt <= 0) {\n        throw new Error(`could not ping target \"${targetId}\"`)\n      }\n\n      await this.ping(targetId, numberOfAttempt)\n    }\n  }\n\n  onMessage = (onMessageFn: OnMessageFnType<IncomingDataType>) => {\n    this.onMessageFn = onMessageFn\n  }\n\n  onRequest = (onRequestFn: OnRequestFnType<IncomingDataType, OutgoingDataType>) => {\n    this.onRequestFn = onRequestFn\n  }\n\n  removeListener = () => {\n    if (this.onMessageListenerAdded) {\n      this.onMessageListenerAdded = false\n      self.removeEventListener('message', this.onMessageListener)\n    }\n  }\n\n  sendMessage = (targetId: string, message: OutgoingDataType) => this._sendMessage({ data: JSON.stringify(message), to: targetId, from: this.id })\n\n  private _sendMessage = (message: IMessage) => {\n    if (this.isTargetWindow) {\n      (this.target as Window).postMessage(message, this.targetOrigin)\n    } else {\n      (this.target as ServiceWorker).postMessage(message)\n    }\n  }\n\n  sendRequest = (targetId: string, message: OutgoingDataType, timeout = 10000) => this._sendRequest({ data: JSON.stringify(message), to: targetId, from: this.id }, timeout)\n\n  private _sendRequest = (message: IMessage, timeout = 10000) => (\n    new Promise<IncomingDataType>((resolve, reject) => {\n      let requestTimeout: number\n\n      const {\n        port1,\n        port2,\n      } = new MessageChannel()\n\n      port1.onmessage = (evt) => {\n        if (requestTimeout) {\n          self.clearTimeout(requestTimeout)\n        }\n        port1.close()\n\n        const message: IMessage = evt.data\n\n        if (message.error) {\n          reject(message.error)\n        } else {\n          resolve(message.data as IncomingDataType)\n        }\n      }\n\n\n      if (this.isTargetWindow) {\n        (this.target as Window).postMessage(message, this.targetOrigin, [port2])\n      } else {\n        (this.target as ServiceWorker).postMessage(message, [port2])\n      }\n\n      if (timeout) {\n        requestTimeout = self.setTimeout(() => {\n          reject('request timed out')\n        }, timeout)\n      }\n    })\n  )\n}","let loaded = false\n\nexport function onWindowLoad() {\n  return new Promise<void>((resolve, reject) => {\n    if (loaded) {\n      resolve()\n    } else if (['loaded', 'interactive', 'complete'].indexOf(document.readyState) > -1) {\n      loaded = true\n      resolve()\n    } else {\n      window.addEventListener(\n        'load',\n        () => {\n          loaded = true\n          resolve()\n        },\n        false,\n      )\n    }\n  })\n}"],"names":[],"version":3,"file":"my-koinos-wallet-sdk.js.map"}