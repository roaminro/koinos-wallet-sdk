{"mappings":"AAyBA;IACE,OAAO,EAAE,MAAM,CAAA;IACf,OAAO,CAAC,EAAE;QACR,OAAO,EAAE,MAAM,CAAC;KACjB,EAAE,CAAA;CACJ;AKXD;gBAIc,SAAS,EAAE,MAAM;IAW7B,KAAK;IAIC,YAAY;IAeZ,WAAW,CAAC,OAAO,SAAQ;IASjC,SAAS,CAAC,aAAa,EAAE,MAAM,EAAE,OAAO,GAAE,MAAc;IAIxD,WAAW,CAAC,OAAO,GAAE,MAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAGpC","sources":["src/src/interfaces.ts","src/src/util/Messenger.ts","src/src/provider.ts","src/src/signer.ts","src/src/util/onWindowLoad.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,null,null,"import { IncomingMessage, OutgoingMessage, Account } from './interfaces'\nimport getProvider from './provider'\nimport generateSigner from './signer'\nimport { Messenger } from './util/Messenger'\nimport { onWindowLoad } from './util/onWindowLoad'\n\nconst KOINOS_WALLET_IFRAME_CLASS = 'koinos-wallet-iframe'\nconst WALLET_CONNECTOR_MESSENGER_ID = 'wallet-connector-child'\nconst KOINOS_WALLET_MESSENGER_ID = 'wallet-connector-parent'\n\nonWindowLoad()\n  .then(() => {\n    if (document.getElementsByClassName(KOINOS_WALLET_IFRAME_CLASS).length) {\n      console.warn('Koinos-Wallet script was already loaded. This might cause unexpected behavior. If loading with a <script> tag, please make sure that you only load it once.')\n    }\n  })\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  .catch(() => { }) // Prevents unhandledPromiseRejectionWarning, which happens when using React SSR;\n\nexport default class KoinosWallet {\n  private messenger: Messenger<IncomingMessage, OutgoingMessage>\n  private iframe: HTMLIFrameElement\n\n  constructor(walletUrl: string) {\n    this.iframe = document.createElement('iframe')\n    this.iframe.id = KOINOS_WALLET_IFRAME_CLASS\n    this.iframe.hidden = true\n    this.iframe.onload = () => this.onIframeLoad()\n    this.iframe.src = walletUrl\n    document.body.appendChild(this.iframe)\n\n    KoinosWallet.checkIfAlreadyInitialized()\n  }\n\n  close() {\n    this.messenger.removeListener()\n  }\n\n  async onIframeLoad() {\n    this.messenger = new Messenger<IncomingMessage, OutgoingMessage>(this.iframe.contentWindow as Window, KOINOS_WALLET_MESSENGER_ID)\n\n    await this.messenger.ping(WALLET_CONNECTOR_MESSENGER_ID)\n    console.log('connected to koinos-wallet-connector')\n  }\n\n  private static checkIfAlreadyInitialized() {\n    if (document.getElementsByClassName(KOINOS_WALLET_IFRAME_CLASS).length) {\n      console.warn(\n        'An instance of Koinos-Wallet was already initialized. This is probably a mistake. Make sure that you use the same Koinos-Wallet instance throughout your app.',\n      )\n    }\n  }\n\n  async getAccounts(timeout = 60000) {\n    const { result } = await this.messenger.sendRequest(WALLET_CONNECTOR_MESSENGER_ID, {\n      scope: 'accounts',\n      command: 'getAccounts'\n    }, timeout)\n\n    return result as Account[]\n  }\n\n  getSigner(signerAddress: string, timeout: number = 60000) {\n    return generateSigner(signerAddress, this.messenger, WALLET_CONNECTOR_MESSENGER_ID, timeout)\n  }\n\n  getProvider(timeout: number = 60000) {\n    return getProvider(this.messenger, WALLET_CONNECTOR_MESSENGER_ID, timeout)\n  }\n}"],"names":[],"version":3,"file":"koinos-wallet.d.ts.map"}